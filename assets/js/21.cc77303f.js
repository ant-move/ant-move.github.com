(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{386:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"antmove-2-0-展望-不一样的代码编译解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#antmove-2-0-展望-不一样的代码编译解决方案"}},[t._v("#")]),t._v(" Antmove 2.0 展望，不一样的代码编译解决方案")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB13u6Cb4z1gK0jSZSgXXavwpXa-3852-936.png",alt:"antmove"}})]),t._v(" "),s("p",[t._v("Antmove 小程序转换器，去年 5 月开始立项，7 月份左右正式开源，到目前为止已经帮助上百个小程序实现转换迁徙。在不断更新维护的过程中，随着转换平台的增多和用户自定义需求的增长，Antmove 需要处理的问题和逻辑变得越加复杂，为了应对支持平台的扩张和转换功能逻辑的复杂化，团队进行了 2.0 版本重构，旨在提供一套可伸缩插件化的通用代码编译解决方案。")]),t._v(" "),s("h2",{attrs:{id:"amove-为代码快速编译实现的底层编译器工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amove-为代码快速编译实现的底层编译器工具"}},[t._v("#")]),t._v(" Amove - 为代码快速编译实现的底层编译器工具")]),t._v(" "),s("p",[t._v("代码编译转换是一个复杂的应用场景，为了应对大型项目的代码编译，我们需要一种安全可靠，同时又足够便利的架构模型，Amove  也因此而诞生，经过长时间的迭代，目前 Amove 已经沉淀除了一套代码编译的最佳实践解决方案。除了 Antmove 之外，还支撑了团队多个项目的代码迁徙转换工作。")]),t._v(" "),s("h3",{attrs:{id:"amove-编译流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amove-编译流程图"}},[t._v("#")]),t._v(" Amove 编译流程图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cache.amap.com/ecology/tool/web/assets/amove/amove.png",alt:"amove"}})]),t._v(" "),s("p",[t._v("从上图可以看到，Amove 的编译流程分为编译和二次编译两个阶段，同时通过可预测的编译模型，可以简单的实现热编译功能。")]),t._v(" "),s("p",[t._v("除了编译流程的把控外，Amove 提供了灵活的插件机制（可参考 babel 的插件化工作机制），Amove 的插件设计比 babel 更加灵活，可以和其它编译器工具结合使用。比如 基于 amove 重构的 Antmove 版本 js 代码编译部分就结合 babel 来处理的。")]),t._v(" "),s("p",[t._v("更多可参考 amove 文档介绍。")]),t._v(" "),s("h2",{attrs:{id:"wx-compiler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wx-compiler"}},[t._v("#")]),t._v(" wx-compiler")]),t._v(" "),s("p",[t._v("wx-compiler 是 Antmove 2.0 重构的第一步，它是一个完全插件化的微信小程序转其它小程序版本，基于该版本，用户可以在 wx-compiler 的整个编译流程中插入自定义操作，从而实现定制化转换工具。")]),t._v(" "),s("h3",{attrs:{id:"如何使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[t._v("#")]),t._v(" 如何使用")]),t._v(" "),s("p",[t._v("最新版本的 antmove 已经集成 wx2my，即 wx-compiler 转支付宝小程序能力，微信转其它平台功能会逐步推出。")]),t._v(" "),s("h3",{attrs:{id:"antmove-编译原子拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#antmove-编译原子拆分"}},[t._v("#")]),t._v(" Antmove 编译原子拆分")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cache.amap.com/ecology/tool/web/assets/amove/antmove.png",alt:"antmove wx-compiler amove atoms"}})]),t._v(" "),s("p",[t._v("wx-compiler 目前实现版本大概由 50 个左右的编译原子组成，分为如下三个模块")]),t._v(" "),s("ul",[s("li",[t._v("@amove/wx - 微信小程序数据解析模块")]),t._v(" "),s("li",[t._v("@amove/wx-utils - 微信小程序通用处理编译原子集合")]),t._v(" "),s("li",[t._v("@amove/wx-alipay - 微信小程序转支付宝编译原子集合")])]),t._v(" "),s("p",[t._v("基于上述结构，我们只要扩充一下 @amove/wx-alipay 模块就可以得到微信小程序转其它平台的转换版本。")]),t._v(" "),s("h3",{attrs:{id:"编译插件编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译插件编写"}},[t._v("#")]),t._v(" 编译插件编写？")]),t._v(" "),s("p",[t._v("插件的编写非常简单，只需编写一个简单的函数就可以，如下所示：")]),t._v(" "),s("ul",[s("li",[t._v("更改导航栏背景色")])]),t._v(" "),s("p",[t._v("新建一个 js 文件，copy 如下代码，在编译前执行该文件即可生效。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AppJsonWindow")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationBarBackgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#000000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("AppJsonWindow")]),t._v(" 是 Antmove 内置的一个编译原子，也即 Antmove 的一个编译流程节点，按如上方式可以简单的对该阶段的功能进行定制化操作。")])]),t._v(" "),s("ul",[s("li",[t._v("组件引入路径处理")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AppJson")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationBarBackgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#000000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UsingComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比如将 vCard => v-card")]),t._v("\n\t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者给某一个组件指定引入路径")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("在 Antmove 2.0 中，我们希望 Antmove 转换器能成为一个小程序编译的通用解决方案，让更多有定制化需要的用户可以充分使用 Antmove 的能力，同时又能扩充自己的转换需求。\n除了基本 Antmove 扩展，为 Antmove 提供插件为，Amove 也可以作为其它编译难题的解决方案，比如代码迁移，脚手架生成等。")])])}),[],!1,null,null,null);a.default=e.exports}}]);